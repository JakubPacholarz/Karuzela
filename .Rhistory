c
c(seq.int(from = 1, to = 20, by = 1))
solve
matrix(2:10,3,3)
c(seq.int(from = 1, to = 20, by = 1))
b=6:10
b[c(T,T,F,F,T)]
rep(1:10,1:10)
1:20
a[-(1:5)];
a[seq.int(1,58,2)];
a=rep(c(1,-1),5)
outer(a,a)
a=rep(c(1,-1),5)
a
c(1,2)
(c(1,-1),5)
a=rep(c(1,-1),5)
outer(a,a)
c(1,2)%o%c(3,4,5)
#complex
a=complex(real=0.9,imaginary=0.8)
plot(a^seq.int(1,100,1),type="b")
as.matrix(1:10) #konwertowanie na macierz
as.matrix(1:10) #konwertowanie na macierz
crossprod(A,5:6) #iloczyn skalarny
c(1,2)%o%c(3,4,5)
kronecker(X = c(1,2),Y = matrix(c(3,4,5,6),2,2,byrow = TRUE),FUN = "+")
kronecker(X = c(1,2),Y = matrix(c(3,4,5,6),2,2,byrow = TRUE),FUN = "*")
c(1,2) %x% matrix(c(3,4,5,6),2,2,byrow = TRUE)
as.matrix(1:10) #konwertowanie na macierz
diag(1:6) #macierz diagonalna
diag(5) #macierz jednostkowa
kronecker(X = c(1,2),Y = matrix(c(3,4,5,6),2,2,byrow = TRUE),FUN = "+")
kronecker(X = c(1,3),Y = matrix(c(3,4,5,6),2,2,byrow = TRUE),FUN = "+")
outer(X = c(1,2),Y = c(3,4,5),FUN = "+")
dimnames(m)<-list(c("x1","x2","x3"),c("y1","y2","y3"))
m <-matrix(1:9,3,3) # inny sposób ... mniej popularny, po nazwach
dimnames(m)<-list(c("x1","x2","x3"),c("y1","y2","y3"))
m["x2","y3"]
m
Y=rnorm(30,2,3)
y
Y
b=diag(10)*c(1,-1)
b
m=matrix(c(2:10),3,3)
m
det(m)
A=matrix(0,20,20)
A[col(A)<=row(A)]=1
A
diag(c(1,-1),10,10)
matrix(c(1,-1),4,4)
w=Orange
w
mtcars
aggregate(mtcars$mpg,mtcars$gear,)
diag(1,2,2)
c(seq.int(from = 1, to = 20, by = 1))
1:20
20:1
seq.int(2,50,2)
seq.int(17,1000,17)
c(seq.int(1,20,1),seq.int(19,1,-1))
rep(c(4,6,3),times=10)
rep(c(4,6,3),each=10)
rep(1:10,1:10)
a=seq.int(from=17,to=1000,by=17)
a[4];a[2:5];a[-1];a[c(2,4)];
a[-(1:5)];
a[seq.int(1,58,2)];
b=6:10
b[c(T,T,F,F,T)]
# rzutowanie
1+c(3,4)
c(1,4,5,6)+c(3,4)
1:100*c(1,-1)
a=3;b=6;c=7;
a+b>c & a+c=b & c+b=a & (a>0 & b>0 & c>0);
1.
a=Orange
aggregate(age~Tree,data=a,FUN="max")
2.
c("a","b","c")
3.
seq.int(-98,98,2)
4.
seq.int(19,1000,19)
5.
table(mtcars$cyl,mtcars$gear)
6.
rep(c(2,3),each=16)
7.
8.
Y=rnorm(30,2,3)
Y[2:29]
9.
log(60)<3^2|log(60)<200%%18
10.
a=2:99
mean(a)
median(a)
sd(a)
a=Orange
aggregate(age~Tree,data=a,FUN="max")
c("a","b","c")
seq.int(-98,1000,2)
table(mtcars$cyl,mtcars$gear)
rep(c(2,3),each=16)
diag(50)*c(1,-1)
matrix(2:10,3,3)
matrix(2:10,3,3)
solve
a=rep(c(1,-1),5)
outer(a,a)
kronecker(matrix(1,5,5),matrix(c(1,-1,-1,1),2,2))
matrix(c(10,-10,10),15,3,byrow = T)
outer(rep(1,15),c(10,-10,10))
matrix(data=(0:4),nrow=5,ncol=5,byrow=T)
outer(0:4,0:4,"+")
outer(0:4,0:4,"+")%%5
d=diag(1,nrow = 10,ncol=10)
d[1,1:10]=1
d[1:10,10]=1
d
A=matrix(0,10,10)
A[col(A)>=row(A)]=1
A
b=matrix(0,10,10)
b[col(b)==row(b)]=2
b[col(b)==row(b)-1]=1
b[col(b)==row(b)+1]=1
b
H=
b(2,4,6)
H=
b<-(2,4,6)
H=
b <- (2,4,6)
H=
b <- (2.4.6)
b=6:10
b[c(T,T,F,F,T)]
T(2,3)
c("a","b","c")
seq.int(-98,98,2)
T("2","3")
#complex
a=complex(real=0.9,imaginary=0.8)
plot(a^seq.int(1,100,1),type="b")
c(1,2)%o%c(3,4,5)
outer(X = c(1,2),Y = c(3,4,5),FUN = "+")
outer(X = c(1,2),Y = c(3,4,5),FUN = "*")
#definiowanie
matrix(data = 1,nrow = 2,ncol = 5, byrow = F,dimnames = aaa)
matrix(1:6,nrow=2,ncol=3,byrow=TRUE)
diag(1:6) #macierz diagonalna
diag(5) #macierz jednostkowa
outer(X = c(1,2),Y = c(3,4,5),FUN = "+")
A[2,1]
A[2,]
A[,-3]
T[3,4]
T<-(9,8)
T <-(9,8)
T <-(9,8)
t
T
m <-matrix(1:9,3,3) # inny sposób ... mniej popularny, po nazwach
dimnames(m)<-list(c("x1","x2","x3"),c("y1","y2","y3"))
m["x2","y3"]
m
heatmap(m)
T=c(3,4,5)
T
outer(X = c(1,2),Y = c(3,4,5),FUN = "*")
c(1,2)%o%c(3,4,5)
matrix(1:6,nrow=2,ncol=3,byrow=TRUE)
diag(1:6) #macierz diagonalna
kronecker(X = c(1,3),Y = matrix(c(3,4,5,6),2,2,byrow = TRUE),FUN = "+")
A=matrix(rnorm(9),nrow =3,ncol = 3, byrow= TRUE)
A
A = matrix(0,3,3)
B = matrix(1,3,2)
C = matrix (2,2,3)
A
B
C
rbind(A,C)
c(seq.int(from = 1, to = 20, by = 1))
1:20
20:1
seq.int(2,50,2)
seq.int(17,1000,17)
c(seq.int(1,20,1),seq.int(19,1,-1))
rep(c(4,6,3),times=10)
rep(c(4,6,3),each=10)
rep(1:10,1:10)
a=seq.int(from=17,to=1000,by=17)
a[4];a[2:5];a[-1];a[c(2,4)];
a[-(1:5)];
a[seq.int(1,58,2)];
b=6:10
b[c(T,T,F,F,T)]
# rzutowanie
1+c(3,4)
c(1,4,5,6)+c(3,4)
1:100*c(1,-1)
a=3;b=6;c=7;
a+b>c & a+c=b & c+b=a & (a>0 & b>0 & c>0);
1.
a=Orange
aggregate(age~Tree,data=a,FUN="max")
2.
c("a","b","c")
3.
seq.int(-98,98,2)
4.
seq.int(19,1000,19)
5.
table(mtcars$cyl,mtcars$gear)
6.
rep(c(2,3),each=16)
7.
8.
Y=rnorm(30,2,3)
Y[2:29]
9.
log(60)<3^2|log(60)<200%%18
10.
a=2:99
mean(a)
median(a)
sd(a)
a=Orange
aggregate(age~Tree,data=a,FUN="max")
c("a","b","c")
seq.int(-98,1000,2)
table(mtcars$cyl,mtcars$gear)
rep(c(2,3),each=16)
diag(50)*c(1,-1)
matrix(2:10,3,3)
solve
c(seq.int(from = 0, to = 1, by = 1))
1:20
seq.int(2,50,2)
seq.int(17,1000,17)
seq.int(0,50,1)
c(seq.int(1,20,1),seq.int(19,1,-1))
rep(1:10,1:10)
rep(c(4,6,3),each=10)
a[4];a[2:5];a[-1];a[c(2,4)];
a[-(1:5)];
a[seq.int(1,58,2)];
b=6:10
b[c(T,T,F,F,T)]
# rzutowanie
1+c(3,4)
c(1,4,5,6)+c(3,4)
seq.int(19,1000,19)
c(seq.int(from = 1, to = 20, by = "ranodm"))
results=c(22.51,22.49,22.58,22.57,22.49,22.51,22.61,22.44,22.53,22.49,22.61,22.53,22.50,22.55,22.51,22.55,22.61,22.56,22.47,22.51,22.59,22.49,22.51,22.60,22.61,22.55,22.51,22.57,22.44,22.50,22.54,22.60,22.65,22.44,22.51,22.49,22.58,22.57,22.49,22.51,22.60,22.55,22.49,22.54,22.63,22.57,22.50,22.55,22.63,22.7)
results
R=max(results)-min(results)
R
srednia=mean(results)
srednia
odchylenie=sd(results)
odchylenie
q=sqrt(50)
q
h=R/q
h
h
rh
rh=c(0,1*h,2*h,3*h,4*h,5*h,6*h,7*h,8*h)
rh
min(results)
rha=rh+21.44
rha
tbh<-sample(results, rha, replace = TRUE)
tbh
df1<-data.frame(tbh)
bp=table(cut(df1$tbh, breaks = rha))
table(cut(df1$tbh,breaks = rha))
barplot(bp)
hist(results)
hist(rnorm(results))
mean(rnorm(results))
mean(rnorm(results))
sd(rnorm(results))
sd(rnorm(results))
sd(rnorm(results))
sd(rnorm(results))
sd(rnorm(results))
sd(rnorm(results))
libary(cluster)
library(cluster, lib.loc = "C:/Program Files/R/R-4.1.2/library")
library(MASS, lib.loc = "C:/Program Files/R/R-4.1.2/library")
C = matrix (2,2,3)
